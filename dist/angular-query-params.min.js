/**
 * angular-query-params - 
 * @version v1.0.0
 * @link https://github.com/ins87/angular-query-params
 * @license MIT
 */
!function(){"use strict";function r(r){var t,n;this.set=function(t,n){if(!t)throw new TypeError("Missing argument: key");angular.isArray(n)&&1===n.length&&(n=n[0]),r.search(t,n)},this.get=function(t){var n=r.search();return n[t]},this.has=function(r,t){var n=this.get(r);return t?angular.isArray(n)?-1!==n.indexOf(t):n===t:!!n},this.push=function(r,i){var e=n("push",r,i);e||this.has(r,i)||t("push",r,i,function(r){return r.push(i),r})},this.remove=function(r,i){var e=n("remove",r,i);if(!e)return i?void t("remove",r,i,function(r){return r.filter(function(r){return r!==i})}):void this.set(r)},n=function(r,t,n){return angular.isArray(n)?(angular.forEach(n,this[r].bind(this,t)),!0):!1}.bind(this),t=function(r,t,n,i){var e=this.get(t)||[];return angular.isArray(e)||(e=[e]),e=i(e),e.length?this.set(t,e):this.set(t)}.bind(this)}angular.module("angularQueryParams",[]).service("queryParams",r),r.$inject=["$location"]}();